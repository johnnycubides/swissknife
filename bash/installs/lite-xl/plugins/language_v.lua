-- mod-version:3
-- copied from language_js, but added regex highlighting back
local syntax = require("core.syntax")

syntax.add({
	name = "Verilog",
	files = { "%.v$" },
	comment = "//",
	patterns = {
		{ pattern = "//.-\n", type = "comment" },
		{ pattern = { "/%*", "%*/" }, type = "comment" },
		{ pattern = { "/%g", "/", "\\" }, type = "string" },
		{ pattern = { '"', '"', "\\" }, type = "string" },
		{ pattern = { "'", "'", "\\" }, type = "string" },
		{ pattern = { "`", "", "\\" }, type = "string" },
		{ pattern = "[%d|%x]'[b|d|o|h][%d|%x]", type = "number" }, --%x -> hexadecimal se puede mejorar con expresiones anidadas
		{ pattern = "0x[%da-fA-F]+", type = "number" },
		{ pattern = "-?%d+[%d%.eE]*", type = "number" },
		{ pattern = "-?%.?%d+", type = "number" },
		{ pattern = "[%+%-=/%*%^%%<>!~|&]", type = "operator" },
		{ pattern = "interface%s()[%a_][%w_]*", type = { "keyword", "keyword2" } },
		{ pattern = "type%s()[%a_][%w_]*", type = { "keyword", "keyword2" } },
		{ pattern = "[%a_][%w_]*%f[(]", type = "function" },
		{ pattern = "[%a_][%w_]*", type = "symbol" },
	},
	symbols = {
		["default_nettype"] = "keyword",
		["include"] = "keyword",
		["module"] = "keyword",
		["endmodule"] = "keyword",
		["initial"] = "keyword",
		["begin"] = "keyword",
		["end"] = "keyword",
		["assign"] = "keyword2",
		["input"] = "keyword2",
		["output"] = "keyword2",
		["wire"] = "keyword2",
		["reg"] = "keyword2",
		["always"] = "keyword",
		["async"] = "keyword",
		["await"] = "keyword",
		["break"] = "keyword",
		["case"] = "keyword",
		["catch"] = "keyword",
		["class"] = "keyword",
		["const"] = "keyword",
		["continue"] = "keyword",
		["debugger"] = "keyword",
		["default"] = "keyword",
		["delete"] = "keyword",
		["do"] = "keyword",
		["else"] = "keyword",
		["export"] = "keyword",
		["extends"] = "keyword",
		["finally"] = "keyword",
		["for"] = "keyword",
		["function"] = "keyword",
		["get"] = "keyword",
		["if"] = "keyword",
		["import"] = "keyword",
		["implements"] = "keyword",
		["in"] = "keyword",
		["instanceof"] = "keyword",
		["let"] = "keyword",
		["new"] = "keyword",
		["return"] = "keyword",
		["set"] = "keyword",
		["static"] = "keyword",
		["super"] = "keyword",
		["switch"] = "keyword",
		["throw"] = "keyword",
		["try"] = "keyword",
		["typeof"] = "keyword",
		["var"] = "keyword",
		["void"] = "keyword",
		["while"] = "keyword",
		["with"] = "keyword",
		["yield"] = "keyword",
		["true"] = "literal",
		["false"] = "literal",
		["null"] = "literal",
		["undefined"] = "literal",
		["arguments"] = "keyword2",
		["Infinity"] = "keyword2",
		["NaN"] = "keyword2",
		["this"] = "keyword2",
	},
})
